// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package ioc

// Injectors from wire.go:

func InitApp() (*App, error) {
	config := ProvideViperConfig()
	metricsCollector := ProvideMetricsCollector(config)
	v := ProvideMiddlewares(config, metricsCollector)
	grpcClientManager, err := ProvideGrpcClientManager(config)
	if err != nil {
		return nil, err
	}
	gatewayIndexService := ProvideGatewayIndexService(grpcClientManager)
	indexHandler := ProvideIndexHandler(gatewayIndexService)
	handlerFunc := ProvideTokenVerifyMiddleware(grpcClientManager)
	indexRouter := ProvideIndexRouter(indexHandler, handlerFunc)
	gatewayGetCaptchaService := ProvideGatewayGetCaptchaService(grpcClientManager)
	getCaptchaHandler := ProvideGetCaptchaHandler(gatewayGetCaptchaService)
	gatewayLoginService := ProvideGatewayLoginService(grpcClientManager)
	loginHandler := ProvideLoginHandler(gatewayLoginService)
	gatewayRegisterService := ProvideGatewayRegisterService(grpcClientManager)
	registerHandler := ProvideRegisterHandler(gatewayRegisterService)
	loginRouter := ProvideLoginRouter(getCaptchaHandler, loginHandler, registerHandler)
	gatewayGetOrgListService := ProvideGatewayGetOrgListService(grpcClientManager)
	getOrgListHandler := ProvideGetOrgListHandler(gatewayGetOrgListService)
	organizationRouter := ProvideOrganizationRouter(getOrgListHandler, handlerFunc)
	gatewayProjectService := ProvideGatewayProjectService(grpcClientManager)
	projectHandler := ProvideProjectHandler(gatewayProjectService)
	projectRouter := ProvideProjectRouter(projectHandler, handlerFunc)
	v2 := ProvideRouters(indexRouter, loginRouter, organizationRouter, projectRouter)
	engine := ProvideGinEngine(config, v, v2, metricsCollector)
	app := &App{
		Server: engine,
	}
	return app, nil
}
