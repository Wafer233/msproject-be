// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: project-service/proto/project/project_service.proto

package project

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Project message definition
type ProjectMessage struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Id                 int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Cover              string                 `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`
	Name               string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Code               string                 `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Description        string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	AccessControlType  string                 `protobuf:"bytes,6,opt,name=access_control_type,json=accessControlType,proto3" json:"access_control_type,omitempty"`
	WhiteList          string                 `protobuf:"bytes,7,opt,name=white_list,json=whiteList,proto3" json:"white_list,omitempty"`
	Order              int32                  `protobuf:"varint,8,opt,name=order,proto3" json:"order,omitempty"`
	Deleted            int32                  `protobuf:"varint,9,opt,name=deleted,proto3" json:"deleted,omitempty"`
	TemplateCode       string                 `protobuf:"bytes,10,opt,name=template_code,json=templateCode,proto3" json:"template_code,omitempty"`
	Schedule           float64                `protobuf:"fixed64,11,opt,name=schedule,proto3" json:"schedule,omitempty"`
	CreateTime         string                 `protobuf:"bytes,12,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	OrganizationCode   string                 `protobuf:"bytes,13,opt,name=organization_code,json=organizationCode,proto3" json:"organization_code,omitempty"`
	DeletedTime        string                 `protobuf:"bytes,14,opt,name=deleted_time,json=deletedTime,proto3" json:"deleted_time,omitempty"`
	Private            int32                  `protobuf:"varint,15,opt,name=private,proto3" json:"private,omitempty"`
	Prefix             string                 `protobuf:"bytes,16,opt,name=prefix,proto3" json:"prefix,omitempty"`
	OpenPrefix         int32                  `protobuf:"varint,17,opt,name=open_prefix,json=openPrefix,proto3" json:"open_prefix,omitempty"`
	Archive            int32                  `protobuf:"varint,18,opt,name=archive,proto3" json:"archive,omitempty"`
	ArchiveTime        int64                  `protobuf:"varint,19,opt,name=archive_time,json=archiveTime,proto3" json:"archive_time,omitempty"`
	OpenBeginTime      int32                  `protobuf:"varint,20,opt,name=open_begin_time,json=openBeginTime,proto3" json:"open_begin_time,omitempty"`
	OpenTaskPrivate    int32                  `protobuf:"varint,21,opt,name=open_task_private,json=openTaskPrivate,proto3" json:"open_task_private,omitempty"`
	TaskBoardTheme     string                 `protobuf:"bytes,22,opt,name=task_board_theme,json=taskBoardTheme,proto3" json:"task_board_theme,omitempty"`
	BeginTime          int64                  `protobuf:"varint,23,opt,name=begin_time,json=beginTime,proto3" json:"begin_time,omitempty"`
	EndTime            int64                  `protobuf:"varint,24,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	AutoUpdateSchedule int32                  `protobuf:"varint,25,opt,name=auto_update_schedule,json=autoUpdateSchedule,proto3" json:"auto_update_schedule,omitempty"`
	ProjectCode        string                 `protobuf:"bytes,26,opt,name=project_code,json=projectCode,proto3" json:"project_code,omitempty"`
	MemberCode         string                 `protobuf:"bytes,27,opt,name=member_code,json=memberCode,proto3" json:"member_code,omitempty"`
	JoinTime           string                 `protobuf:"bytes,28,opt,name=join_time,json=joinTime,proto3" json:"join_time,omitempty"`
	IsOwner            int32                  `protobuf:"varint,29,opt,name=is_owner,json=isOwner,proto3" json:"is_owner,omitempty"`
	Authorize          string                 `protobuf:"bytes,30,opt,name=authorize,proto3" json:"authorize,omitempty"`
	OwnerName          string                 `protobuf:"bytes,31,opt,name=owner_name,json=ownerName,proto3" json:"owner_name,omitempty"`
	Collected          int32                  `protobuf:"varint,32,opt,name=collected,proto3" json:"collected,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ProjectMessage) Reset() {
	*x = ProjectMessage{}
	mi := &file_project_service_proto_project_project_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectMessage) ProtoMessage() {}

func (x *ProjectMessage) ProtoReflect() protoreflect.Message {
	mi := &file_project_service_proto_project_project_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectMessage.ProtoReflect.Descriptor instead.
func (*ProjectMessage) Descriptor() ([]byte, []int) {
	return file_project_service_proto_project_project_service_proto_rawDescGZIP(), []int{0}
}

func (x *ProjectMessage) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProjectMessage) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *ProjectMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProjectMessage) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ProjectMessage) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProjectMessage) GetAccessControlType() string {
	if x != nil {
		return x.AccessControlType
	}
	return ""
}

func (x *ProjectMessage) GetWhiteList() string {
	if x != nil {
		return x.WhiteList
	}
	return ""
}

func (x *ProjectMessage) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *ProjectMessage) GetDeleted() int32 {
	if x != nil {
		return x.Deleted
	}
	return 0
}

func (x *ProjectMessage) GetTemplateCode() string {
	if x != nil {
		return x.TemplateCode
	}
	return ""
}

func (x *ProjectMessage) GetSchedule() float64 {
	if x != nil {
		return x.Schedule
	}
	return 0
}

func (x *ProjectMessage) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ProjectMessage) GetOrganizationCode() string {
	if x != nil {
		return x.OrganizationCode
	}
	return ""
}

func (x *ProjectMessage) GetDeletedTime() string {
	if x != nil {
		return x.DeletedTime
	}
	return ""
}

func (x *ProjectMessage) GetPrivate() int32 {
	if x != nil {
		return x.Private
	}
	return 0
}

func (x *ProjectMessage) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *ProjectMessage) GetOpenPrefix() int32 {
	if x != nil {
		return x.OpenPrefix
	}
	return 0
}

func (x *ProjectMessage) GetArchive() int32 {
	if x != nil {
		return x.Archive
	}
	return 0
}

func (x *ProjectMessage) GetArchiveTime() int64 {
	if x != nil {
		return x.ArchiveTime
	}
	return 0
}

func (x *ProjectMessage) GetOpenBeginTime() int32 {
	if x != nil {
		return x.OpenBeginTime
	}
	return 0
}

func (x *ProjectMessage) GetOpenTaskPrivate() int32 {
	if x != nil {
		return x.OpenTaskPrivate
	}
	return 0
}

func (x *ProjectMessage) GetTaskBoardTheme() string {
	if x != nil {
		return x.TaskBoardTheme
	}
	return ""
}

func (x *ProjectMessage) GetBeginTime() int64 {
	if x != nil {
		return x.BeginTime
	}
	return 0
}

func (x *ProjectMessage) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ProjectMessage) GetAutoUpdateSchedule() int32 {
	if x != nil {
		return x.AutoUpdateSchedule
	}
	return 0
}

func (x *ProjectMessage) GetProjectCode() string {
	if x != nil {
		return x.ProjectCode
	}
	return ""
}

func (x *ProjectMessage) GetMemberCode() string {
	if x != nil {
		return x.MemberCode
	}
	return ""
}

func (x *ProjectMessage) GetJoinTime() string {
	if x != nil {
		return x.JoinTime
	}
	return ""
}

func (x *ProjectMessage) GetIsOwner() int32 {
	if x != nil {
		return x.IsOwner
	}
	return 0
}

func (x *ProjectMessage) GetAuthorize() string {
	if x != nil {
		return x.Authorize
	}
	return ""
}

func (x *ProjectMessage) GetOwnerName() string {
	if x != nil {
		return x.OwnerName
	}
	return ""
}

func (x *ProjectMessage) GetCollected() int32 {
	if x != nil {
		return x.Collected
	}
	return 0
}

// Request message for finding projects by member ID
type ProjectListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MemberId      int64                  `protobuf:"varint,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	Page          int64                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int64                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectListRequest) Reset() {
	*x = ProjectListRequest{}
	mi := &file_project_service_proto_project_project_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectListRequest) ProtoMessage() {}

func (x *ProjectListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_project_service_proto_project_project_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectListRequest.ProtoReflect.Descriptor instead.
func (*ProjectListRequest) Descriptor() ([]byte, []int) {
	return file_project_service_proto_project_project_service_proto_rawDescGZIP(), []int{1}
}

func (x *ProjectListRequest) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *ProjectListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ProjectListRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// Response message for project list
type ProjectListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	List          []*ProjectMessage      `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total         int64                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectListResponse) Reset() {
	*x = ProjectListResponse{}
	mi := &file_project_service_proto_project_project_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectListResponse) ProtoMessage() {}

func (x *ProjectListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_project_service_proto_project_project_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectListResponse.ProtoReflect.Descriptor instead.
func (*ProjectListResponse) Descriptor() ([]byte, []int) {
	return file_project_service_proto_project_project_service_proto_rawDescGZIP(), []int{2}
}

func (x *ProjectListResponse) GetList() []*ProjectMessage {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ProjectListResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_project_service_proto_project_project_service_proto protoreflect.FileDescriptor

const file_project_service_proto_project_project_service_proto_rawDesc = "" +
	"\n" +
	"3project-service/proto/project/project_service.proto\x12\x12project.service.v1\"\x82\b\n" +
	"\x0eProjectMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x14\n" +
	"\x05cover\x18\x02 \x01(\tR\x05cover\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x12\n" +
	"\x04code\x18\x04 \x01(\tR\x04code\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12.\n" +
	"\x13access_control_type\x18\x06 \x01(\tR\x11accessControlType\x12\x1d\n" +
	"\n" +
	"white_list\x18\a \x01(\tR\twhiteList\x12\x14\n" +
	"\x05order\x18\b \x01(\x05R\x05order\x12\x18\n" +
	"\adeleted\x18\t \x01(\x05R\adeleted\x12#\n" +
	"\rtemplate_code\x18\n" +
	" \x01(\tR\ftemplateCode\x12\x1a\n" +
	"\bschedule\x18\v \x01(\x01R\bschedule\x12\x1f\n" +
	"\vcreate_time\x18\f \x01(\tR\n" +
	"createTime\x12+\n" +
	"\x11organization_code\x18\r \x01(\tR\x10organizationCode\x12!\n" +
	"\fdeleted_time\x18\x0e \x01(\tR\vdeletedTime\x12\x18\n" +
	"\aprivate\x18\x0f \x01(\x05R\aprivate\x12\x16\n" +
	"\x06prefix\x18\x10 \x01(\tR\x06prefix\x12\x1f\n" +
	"\vopen_prefix\x18\x11 \x01(\x05R\n" +
	"openPrefix\x12\x18\n" +
	"\aarchive\x18\x12 \x01(\x05R\aarchive\x12!\n" +
	"\farchive_time\x18\x13 \x01(\x03R\varchiveTime\x12&\n" +
	"\x0fopen_begin_time\x18\x14 \x01(\x05R\ropenBeginTime\x12*\n" +
	"\x11open_task_private\x18\x15 \x01(\x05R\x0fopenTaskPrivate\x12(\n" +
	"\x10task_board_theme\x18\x16 \x01(\tR\x0etaskBoardTheme\x12\x1d\n" +
	"\n" +
	"begin_time\x18\x17 \x01(\x03R\tbeginTime\x12\x19\n" +
	"\bend_time\x18\x18 \x01(\x03R\aendTime\x120\n" +
	"\x14auto_update_schedule\x18\x19 \x01(\x05R\x12autoUpdateSchedule\x12!\n" +
	"\fproject_code\x18\x1a \x01(\tR\vprojectCode\x12\x1f\n" +
	"\vmember_code\x18\x1b \x01(\tR\n" +
	"memberCode\x12\x1b\n" +
	"\tjoin_time\x18\x1c \x01(\tR\bjoinTime\x12\x19\n" +
	"\bis_owner\x18\x1d \x01(\x05R\aisOwner\x12\x1c\n" +
	"\tauthorize\x18\x1e \x01(\tR\tauthorize\x12\x1d\n" +
	"\n" +
	"owner_name\x18\x1f \x01(\tR\townerName\x12\x1c\n" +
	"\tcollected\x18  \x01(\x05R\tcollected\"b\n" +
	"\x12ProjectListRequest\x12\x1b\n" +
	"\tmember_id\x18\x01 \x01(\x03R\bmemberId\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x03R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x03R\bpageSize\"c\n" +
	"\x13ProjectListResponse\x126\n" +
	"\x04list\x18\x01 \x03(\v2\".project.service.v1.ProjectMessageR\x04list\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x03R\x05total2|\n" +
	"\x0eProjectService\x12j\n" +
	"\x15GetProjectsByMemberId\x12&.project.service.v1.ProjectListRequest\x1a'.project.service.v1.ProjectListResponse\"\x00B@Z>github.com/Wafer233/msproject-be/project-service/proto/projectb\x06proto3"

var (
	file_project_service_proto_project_project_service_proto_rawDescOnce sync.Once
	file_project_service_proto_project_project_service_proto_rawDescData []byte
)

func file_project_service_proto_project_project_service_proto_rawDescGZIP() []byte {
	file_project_service_proto_project_project_service_proto_rawDescOnce.Do(func() {
		file_project_service_proto_project_project_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_service_proto_project_project_service_proto_rawDesc), len(file_project_service_proto_project_project_service_proto_rawDesc)))
	})
	return file_project_service_proto_project_project_service_proto_rawDescData
}

var file_project_service_proto_project_project_service_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_project_service_proto_project_project_service_proto_goTypes = []any{
	(*ProjectMessage)(nil),      // 0: project.service.v1.ProjectMessage
	(*ProjectListRequest)(nil),  // 1: project.service.v1.ProjectListRequest
	(*ProjectListResponse)(nil), // 2: project.service.v1.ProjectListResponse
}
var file_project_service_proto_project_project_service_proto_depIdxs = []int32{
	0, // 0: project.service.v1.ProjectListResponse.list:type_name -> project.service.v1.ProjectMessage
	1, // 1: project.service.v1.ProjectService.GetProjectsByMemberId:input_type -> project.service.v1.ProjectListRequest
	2, // 2: project.service.v1.ProjectService.GetProjectsByMemberId:output_type -> project.service.v1.ProjectListResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_project_service_proto_project_project_service_proto_init() }
func file_project_service_proto_project_project_service_proto_init() {
	if File_project_service_proto_project_project_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_service_proto_project_project_service_proto_rawDesc), len(file_project_service_proto_project_project_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_project_service_proto_project_project_service_proto_goTypes,
		DependencyIndexes: file_project_service_proto_project_project_service_proto_depIdxs,
		MessageInfos:      file_project_service_proto_project_project_service_proto_msgTypes,
	}.Build()
	File_project_service_proto_project_project_service_proto = out.File
	file_project_service_proto_project_project_service_proto_goTypes = nil
	file_project_service_proto_project_project_service_proto_depIdxs = nil
}
